//******************************************************************************
//*  Sample-1.lts (for MTSA)
//*  Create Date      : 2021/4/8
//*  Creator Name     : 
//*  MTSA run command : [java -jar -Xmx8G mtsa.jar] メモリサイズに応じて8Gは要変更
//*****************************************************************************/


//*****************************************************************************
// Environment
//*****************************************************************************

/* set variable (有限長) */
range ID = 0..8
range T_f = 0..1


/* set Actions (事象の集合) */
set RobotActions = {north, south, east, west}
set CourceActions = {arrive[ID]}
//set Mokemoke = {{ControllableActions}\{north}} //差集合なども表現可能



/* State machine figure */

// Robot Model
ROBOT_S = ROBOT,
ROBOT = (north -> ROBOT | south -> ROBOT | east -> ROBOT | west -> ROBOT).
//ROBOT = ({north, south, east, west} -> ROBOT). //上の同じ
//ROBOT = ({RobotActions} -> ROBOT). //上の同じ

// Cource Model
COURCE_S = COURCE[0],//Robotで変更
COURCE[a:ID] = (when(a < 6) south    -> arrive[a+3] -> COURCE[a+3]
               |when(a > 2) north    -> arrive[a-3] -> COURCE[a-3]
               |when(a % 3 < 2) east -> arrive[a+1] -> COURCE[a+1]
               |when(a % 3 > 0) west -> arrive[a-1] -> COURCE[a-1]).


|| RobotEnvironment = (ROBOT_S).
|| CourceEnvironment = (COURCE_S).

//*****************************************************************************
// Requirement
//*****************************************************************************
 



//*****************************************************************************
// Controller
//*****************************************************************************




//*****************************************************************************
// Image
//*****************************************************************************
// ┏━━━┳━━━┳━━━┓
// ┃ S ┃   ┃   ┃
// ┣━━━╋━━━╋━━━┫
// ┃   ┃ x ┃ x ┃
// ┣━━━╋━━━╋━━━┫
// ┃   ┃   ┃ G ┃
// ┗━━━┻━━━┻━━━┛
// S=スタート地点 G=ゴール地点 x=通れない場所


// 課題１
// 上記の3*3のコースモデルを5*5にしてみよう！
// ┏━━━┳━━━┳━━━┳━━━┳━━━┓
// ┃ S ┃   ┃   ┃   ┃   ┃
// ┣━━━╋━━━╋━━━╋━━━╋━━━┫
// ┃ x ┃ x ┃ x ┃ x ┃   ┃
// ┣━━━╋━━━╋━━━╋━━━╋━━━┫
// ┃   ┃   ┃   ┃   ┃   ┃
// ┣━━━╋━━━╋━━━╋━━━╋━━━┫
// ┃   ┃ x ┃ x ┃ x ┃ x ┃
// ┣━━━╋━━━╋━━━╋━━━╋━━━┫
// ┃   ┃   ┃   ┃   ┃ G ┃
// ┗━━━┻━━━┻━━━┻━━━┻━━━┛
// S=スタート地点 G=ゴール地点 x=通れない場所


// 課題２
// 上記の5*5のコースモデルを２次元配列など，他の方法で記述してみよう！
// ┏━━━┳━━━┳━━━┳━━━┳━━━┓
// ┃ S ┃   ┃   ┃   ┃   ┃
// ┣━━━╋━━━╋━━━╋━━━╋━━━┫
// ┃ x ┃ x ┃ x ┃ x ┃   ┃
// ┣━━━╋━━━╋━━━╋━━━╋━━━┫
// ┃   ┃   ┃   ┃   ┃   ┃
// ┣━━━╋━━━╋━━━╋━━━╋━━━┫
// ┃   ┃ x ┃ x ┃ x ┃ x ┃
// ┣━━━╋━━━╋━━━╋━━━╋━━━┫
// ┃   ┃   ┃   ┃   ┃ G ┃
// ┗━━━┻━━━┻━━━┻━━━┻━━━┛
// S=スタート地点 G=ゴール地点 x=通れない場所
