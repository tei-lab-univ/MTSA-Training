/*

Exercise - 1
環境
つながった部屋が2部屋(A,B)あり部屋の定員はそれぞれ５人

要求
Aから入りBに一度入ったらAに戻ることができない。
Aは２人まで、Bは３人まで

*/
const K = 5
range N = 0..K

set AllowAction = {allow_A, allow_B}
set MonitorAction = {notEnter, arrive_A[1..K], arrive_B[1..K]}

// Environment
ROOM_A = ROOM_A[0],
ROOM_A[n:N] = 
(
	when (n<K)allow_A -> arrive_A[n+1] -> ROOM_A[n+1] 
	| when (n<K)deny_B -> arrive_A[n+1] -> ROOM_A[n+1]
	| when (n>0)reqEnter_B -> ROOM_A[n-1]
).

ROOM_B = ROOM_B[0],
ROOM_B[n:N] =
(
	when(n<K) allow_B -> arrive_B[n+1] -> ROOM_B[n+1]
	| when(n<K) deny_Out -> arrive_B[n+1] -> ROOM_B[n+1]
	| when(n>0) reqOut -> ROOM_B[n-1]
).

VISITOR = VISIT,
VISIT = (reqEnter_A -> resRoomStatus -> CHECK_A),
CHECK_A = (allow_A -> arrive_A[N] -> VISIT | deny_A -> VISIT).