range NUM_OF_SLOT = 1..3

set PATH1_IN  = {g1toPT1, pt2toPT1, pt3toPT1, pt4toPT1, p[1].outPKtoPT1, p[5].outPKtoPT1,　p[8].outPKtoPT1}
set PATH1_OUT = {pt1toG1, pt1toPT2, pt1toPT3, pt1toPT4, p[1].inPKfromPT1, p[5].outPKfromPT1,　p[8].outPKfromPT1}

/* PARK */
PARK=EMPTY,
EMPTY=(in->FULL),
FULL=(request->outPK->EMPTY).

/* GATE */
GATE1=EMPTY,
EMPTY=({inG1, pt1toG1}->FULL),
FULL=({outG1, g1toPT1} -> EMPTY).

GATE2=EMPTY,
EMPTY=({inG2, pt2toG2}->FULL),
FULL=({outG2, g2toPT2} -> EMPTY).

/* Path */
Path1=EMPTY,
EMPTY=(PATH1_IN->FULL),
FULL =(PATH1_OUT->EMPTY).

Path2=EMPTY,
EMPTY=({p[2].outPK, gtoPT2, pt1toPT2, pt3toPT2}->FULL),
FULL=({p[2].in, pt2toG, pt2toPT1, pt2toPT3}->EMPTY).

Path3=EMPTY,
EMPTY=({p[3].outPK, pt2toPT3}->FULL),
FULL=({p[3].in, pt3toPT2}->EMPTY).

||PARKS = (p[NUM_OF_SLOT]:PARK).
||ENV = (p[NUM_OF_SLOT]:PARK||GATE||Path1||Path2||Path3).

ltl_property NotReturnPT1=[](gtoPT1->X(!pt1toG W (p[1].in || p[2].in)))
ltl_property NotReturnPT2=[](gtoPT2->X(!pt2toG W (p[1].in || p[2].in)))
ltl_property NotReturnPT3=[](pt2toPT3->X(!pt3toPT2 W (p[1].in || p[2].in)))
ltl_property NotReturnPT4=[](pt1toPT2->X(!pt2toPT1 W (p[1].in || p[2].in)))
ltl_property NotReturnPT5=[](pt2toPT1->X(!pt1toPT2 W (p[1].in || p[2].in)))

controllerSpec Spec={
	safety = {NotReturnPT1, NotReturnPT2}
	controllable = {p[NUM_OF_SLOT].in, p[NUM_OF_SLOT].out}
	//controllable = {p[NUM_OF_SLOT].in, p[NUM_OF_SLOT].out, gtoPT1, gtoPT2, pt1toG, pt2toG, inG, outG, pt2topPT1 , pt2topPT3, pt3topPT2}
}
controller ||Controller = (ENV)~{Spec}.
