range NUM_OF_SLOT = 1..8

// PARK
PARK1 = EMPTY,
EMPTY = ({inPKfromPT1, inPKfromPT13, inPKfromPT15, inPKfromPT18}->FULL),
FULL = (request->{outPKtoPT1, outPKtoPT13, outPKtoPT15, outPKtoPT18}->EMPTY).

PARK3 = EMPTY,
EMPTY = ({inPKfromPT3, inPKfromPT13, inPKfromPT37, inPKfromPT38}->FULL),
FULL = (request->{outPKtoPT3, outPKtoPT13, outPKtoPT37, outPKtoPT38}->EMPTY).

PARK5 = EMPTY,
EMPTY = (inPKfromPT15->FULL),
FULL = (request->outPKtoPT15->EMPTY).

PARK7 = EMPTY,
EMPTY = (inPKfrom37->FULL),
FULL = (request->outPKtoPT37->EMPTY).

PARK8 = EMPTY,
EMPTY = ({inPKfromPT18, inPKfromPT38}->FULL),
FULL = (request->{outPKtoPT18, outPKtoPT38}->EMPTY).


// GATE
GATE1 = EMPTY,
EMPTY = ({inG1, pt15toG1, pt18toG1}->FULL),
FULL = ({outG1, g1toPT15, g1toPT18}->EMPTY).

GATE2 = EMPTY,
EMPTY = ({inG2, pt37toG2, pt38toG2}->FULL),
FULL = ({outG2, g2toPT37, g2toPT38}->EMPTY).

// PATH
Path1 = EMPTY,
EMPTY = ({p1.outPKtoPT1, pt3toPT1, pt13toPT1, pt15toPT1}->FULL),
FULL = ({p1.inPKfromPT1, pt1toPT3, pt1toPT13, pt1toPT15}->EMPTY).

Path3 = EMPTY,
EMPTY = ({p3.outPKtoPT3, pt1toPT3, pt13toPT3, pt37toPT3}->FULL),
FULL = ({p3.inPKfromPT3, pt3toPT1, pt3toPT13, pt3toPT37}->EMPTY).

Path13 = EMPTY,
EMPTY = ({p1.outPKtoPT13, p3.outPKtoPT13, pt1toPT13, pt3toPT13, pt18toPT13, pt38toPT13}->FULL),
FULL = ({p1.inPKfromPT13, p3.inPKfromPT13, pt13toPT1, pt13toPT3, pt13toPT18, pt13toPT38}->EMPTY).

Path15 = EMPTY,
EMPTY = ({p1.outPKtoPT15, p5.outPKtoPT15, g1toPT15, pt1toPT15, pt18toPT15}->FULL),
FULL = ({p1.inPKfromPT15, p5.inPKfromPT15, pt15toG1, pt15toPT1, pt15toPT18}->EMPTY).

Path18 = EMPTY,
EMPTY = ({p1.outPKtoPT18, p8.outPKtoPT18, g1toPT18, pt13toPT18, pt15toPT18, pt38toPT18}->FULL),
FULL = ({p1.inPKfromPT18, p8.inPKfromPT18, pt18toG1, pt18toPT13, pt18toPT15, pt18toPT38}->EMPTY).

Path37 = EMPTY,
EMPTY = ({p3.outPKtoPT37, p7.outPKtoPT37, g2toPT37, pt3toPT37, pt38toPT37}->FULL),
FULL = ({p3.inPKfromPT37, p7.inPKfromPT37, pt37toG2, pt37toPT3, pt37toPT38}->EMPTY).

Path38 = EMPTY,
EMPTY = ({p3.outPKtoPT38, p8.outPKtoPT38, g2toPT38, pt13toPT38, pt18toPT38, pt37toPT38}->FULL),
FULL = ({p3.inPKfromPT38, p8.inPKfromPT38, pt38toG2, pt38toPT13, pt38toPT18, pt38toPT37}->EMPTY).

||PARKS = (p1:PARK1 || p3:PARK3 || p5:PARK5 || p7:PARK7 || p8:PARK8).
||ENV = (p1:PARK1 || p3:PARK3 || p5:PARK5 || p7:PARK7 || p8:PARK8 || GATE1 || GATE2 || Path1 || Path3 || Path13 || Path15 || Path18 || Path37 || Path38).


// ltl_property NotReturnPT1=[](gtoPT1->X(!pt1toG W (p[1].in)))
// ltl_property NotReturnPT2=[](gtoPT2->X(!pt2toG W (p[2].in)))
// ltl_property NotReturnPT3=[](gtoPT3->X(!pt3to2 W (p[3].in)))

controllerSpec Spec = {
	// safety = {NotReturnPT1}
	controllable = {
		inPKfromPT1, inPKfromPT13, inPKfromPT15, inPKfromPT18, outPKtoPT1, outPKtoPT13, outPKtoPT15, outPKtoPT18,
		inPKfromPT3, inPKfromPT37, inPKfromPT38, outPKtoPT3, outPKtoPT37, outPKtoPT38,
		inPKfrom37, outPKtoPT37,
		inPKfromPT18, inPKfromPT38, outPKtoPT18, outPKtoPT38,
		inG1, pt15toG1, pt18toG1, outG1, g1toPT15, g1toPT18,
		inG2, pt37toG2, pt38toG2, outG2, g2toPT37, g2toPT38,
		p1.outPKtoPT1, pt3toPT1, pt13toPT1, pt15toPT1, p1.inPKfromPT1, pt1toPT3, pt1toPT13, pt1toPT15,
		p3.outPKtoPT3, pt13toPT3, pt37toPT3, p3.inPKfromPT3, pt3toPT13, pt3toPT37,
		p1.outPKtoPT13, p3.outPKtoPT13, pt1toPT13, pt3toPT13, pt18toPT13, pt38toPT13, p1.inPKfromPT13, p3.inPKfromPT13, pt13toPT1, pt13toPT3, pt13toPT18, pt13toPT38,
		p1.outPKtoPT15, p5.outPKtoPT15, g1toPT15, pt1toPT15, pt18toPT15, p1.inPKfromPT15, p5.inPKfromPT15, pt15toG1, pt15toPT1, pt15toPT18,
		p1.outPKtoPT18, p8.outPKtoPT18, g1toPT18, pt13toPT18, pt15toPT18, pt38toPT18, p1.inPKfromPT18, p8.inPKfromPT18, pt18toG1, pt18toPT13, pt18toPT15, pt18toPT38,
		p3.outPKtoPT37, p7.outPKtoPT37, g2toPT37, pt3toPT37, pt38toPT37, p3.inPKfromPT37, p7.inPKfromPT37, pt37toG2, pt37toPT3, pt37toPT38,
		p3.outPKtoPT38, p8.outPKtoPT38, g2toPT38, pt13toPT38, pt18toPT38, pt37toPT38, p3.inPKfromPT38, p8.inPKfromPT38, pt38toG2, pt38toPT13, pt38toPT18, pt38toPT37
	}
}
controller ||Controller = (ENV)~{Spec}.
